# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bc_pb2 as bc__pb2
import core_pb2 as core__pb2


class BcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRoveredBlockHash = channel.unary_unary(
                '/bc.exchange.Bc/GetRoveredBlockHash',
                request_serializer=bc__pb2.GetRoveredBlockHashRequest.SerializeToString,
                response_deserializer=core__pb2.Block.FromString,
                )
        self.GetRoveredBlockHeight = channel.unary_unary(
                '/bc.exchange.Bc/GetRoveredBlockHeight',
                request_serializer=bc__pb2.GetRoveredBlockHeightRequest.SerializeToString,
                response_deserializer=core__pb2.Block.FromString,
                )
        self.GetRoveredBlocks = channel.unary_unary(
                '/bc.exchange.Bc/GetRoveredBlocks',
                request_serializer=bc__pb2.GetRoveredBlocksRequest.SerializeToString,
                response_deserializer=bc__pb2.GetRoveredBlocksResponse.FromString,
                )
        self.GetLatestRoveredBlocks = channel.unary_unary(
                '/bc.exchange.Bc/GetLatestRoveredBlocks',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.GetRoveredBlocksResponse.FromString,
                )
        self.GetNrgSupply = channel.unary_unary(
                '/bc.exchange.Bc/GetNrgSupply',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.GetNrgSupplyResponse.FromString,
                )
        self.GetBlockHash = channel.unary_unary(
                '/bc.exchange.Bc/GetBlockHash',
                request_serializer=bc__pb2.GetBlockHashRequest.SerializeToString,
                response_deserializer=core__pb2.BcBlock.FromString,
                )
        self.GetBlockHeight = channel.unary_unary(
                '/bc.exchange.Bc/GetBlockHeight',
                request_serializer=bc__pb2.GetBlockHeightRequest.SerializeToString,
                response_deserializer=core__pb2.BcBlock.FromString,
                )
        self.GetBlocksHeight = channel.unary_unary(
                '/bc.exchange.Bc/GetBlocksHeight',
                request_serializer=bc__pb2.GetBlockHeightRequest.SerializeToString,
                response_deserializer=bc__pb2.GetBlocksResponse.FromString,
                )
        self.GetBlocks = channel.unary_unary(
                '/bc.exchange.Bc/GetBlocks',
                request_serializer=bc__pb2.GetBlocksRequest.SerializeToString,
                response_deserializer=bc__pb2.GetBlocksResponse.FromString,
                )
        self.GetLatestBlock = channel.unary_unary(
                '/bc.exchange.Bc/GetLatestBlock',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=core__pb2.BcBlock.FromString,
                )
        self.GetLatestUTXOBlock = channel.unary_unary(
                '/bc.exchange.Bc/GetLatestUTXOBlock',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=core__pb2.BcBlock.FromString,
                )
        self.GetTx = channel.unary_unary(
                '/bc.exchange.Bc/GetTx',
                request_serializer=bc__pb2.GetTxRequest.SerializeToString,
                response_deserializer=core__pb2.Transaction.FromString,
                )
        self.GetMarkedTx = channel.unary_unary(
                '/bc.exchange.Bc/GetMarkedTx',
                request_serializer=bc__pb2.GetMarkedTxRequest.SerializeToString,
                response_deserializer=core__pb2.MarkedTransaction.FromString,
                )
        self.GetMarkedTxsForMatchedOrder = channel.unary_unary(
                '/bc.exchange.Bc/GetMarkedTxsForMatchedOrder',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetMarkedTxs.FromString,
                )
        self.GetTradeStatus = channel.unary_unary(
                '/bc.exchange.Bc/GetTradeStatus',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetTradeStatusResponse.FromString,
                )
        self.GetOutpointStatus = channel.unary_unary(
                '/bc.exchange.Bc/GetOutpointStatus',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetOutPointStatusResponse.FromString,
                )
        self.GetTxClaimedBy = channel.unary_unary(
                '/bc.exchange.Bc/GetTxClaimedBy',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=core__pb2.Transaction.FromString,
                )
        self.GetRawMempool = channel.unary_unary(
                '/bc.exchange.Bc/GetRawMempool',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.GetRawMempoolResponse.FromString,
                )
        self.GetBlockByTx = channel.unary_unary(
                '/bc.exchange.Bc/GetBlockByTx',
                request_serializer=bc__pb2.GetTxRequest.SerializeToString,
                response_deserializer=core__pb2.BcBlock.FromString,
                )
        self.GetRoveredBlockForMarkedTx = channel.unary_unary(
                '/bc.exchange.Bc/GetRoveredBlockForMarkedTx',
                request_serializer=bc__pb2.GetMarkedTxRequest.SerializeToString,
                response_deserializer=core__pb2.Block.FromString,
                )
        self.Help = channel.unary_unary(
                '/bc.exchange.Bc/Help',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.HelpResponse.FromString,
                )
        self.Stats = channel.unary_unary(
                '/bc.exchange.Bc/Stats',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.StatsResponse.FromString,
                )
        self.GetSettings = channel.unary_unary(
                '/bc.exchange.Bc/GetSettings',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.SettingsResponse.FromString,
                )
        self.NewFeed = channel.unary_unary(
                '/bc.exchange.Bc/NewFeed',
                request_serializer=bc__pb2.RpcFeedTransactionRequest.SerializeToString,
                response_deserializer=bc__pb2.RpcTransactionResponse.FromString,
                )
        self.UpdateFeed = channel.unary_unary(
                '/bc.exchange.Bc/UpdateFeed',
                request_serializer=bc__pb2.RpcUpdateFeedTransactionRequest.SerializeToString,
                response_deserializer=bc__pb2.RpcTransactionResponse.FromString,
                )
        self.NewTx = channel.unary_unary(
                '/bc.exchange.Bc/NewTx',
                request_serializer=bc__pb2.RpcTransaction.SerializeToString,
                response_deserializer=bc__pb2.RpcTransactionResponse.FromString,
                )
        self.SendTx = channel.unary_unary(
                '/bc.exchange.Bc/SendTx',
                request_serializer=core__pb2.Transaction.SerializeToString,
                response_deserializer=bc__pb2.RpcTransactionResponse.FromString,
                )
        self.GetEmbBalance = channel.unary_unary(
                '/bc.exchange.Bc/GetEmbBalance',
                request_serializer=bc__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=bc__pb2.GetEmbBalanceResponse.FromString,
                )
        self.GetBalance = channel.unary_unary(
                '/bc.exchange.Bc/GetBalance',
                request_serializer=bc__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=bc__pb2.GetBalanceResponse.FromString,
                )
        self.GetWallet = channel.unary_unary(
                '/bc.exchange.Bc/GetWallet',
                request_serializer=bc__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=core__pb2.WalletData.FromString,
                )
        self.GetSpendableOutpoints = channel.unary_unary(
                '/bc.exchange.Bc/GetSpendableOutpoints',
                request_serializer=bc__pb2.GetSpendableCollateralRequest.SerializeToString,
                response_deserializer=core__pb2.WalletData.FromString,
                )
        self.GetSpendableCollateral = channel.unary_unary(
                '/bc.exchange.Bc/GetSpendableCollateral',
                request_serializer=bc__pb2.GetSpendableCollateralRequest.SerializeToString,
                response_deserializer=bc__pb2.GetSpendableCollateralResponse.FromString,
                )
        self.GetUnlockTakerTxParams = channel.unary_unary(
                '/bc.exchange.Bc/GetUnlockTakerTxParams',
                request_serializer=bc__pb2.GetUnlockTakerTxParamsRequest.SerializeToString,
                response_deserializer=bc__pb2.GetUnlockTakerTxParamsResponse.FromString,
                )
        self.GetByteFeeMultiplier = channel.unary_unary(
                '/bc.exchange.Bc/GetByteFeeMultiplier',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.GetByteFeeResponse.FromString,
                )
        self.GetTransfers = channel.unary_unary(
                '/bc.exchange.Bc/GetTransfers',
                request_serializer=bc__pb2.TransferRequest.SerializeToString,
                response_deserializer=bc__pb2.TransferResponse.FromString,
                )
        self.GetTakerForMaker = channel.unary_unary(
                '/bc.exchange.Bc/GetTakerForMaker',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetOutPointRequest.FromString,
                )
        self.GetOpenOrder = channel.unary_unary(
                '/bc.exchange.Bc/GetOpenOrder',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetOpenOrdersResponse.FromString,
                )
        self.GetOpenCallbackOrder = channel.unary_unary(
                '/bc.exchange.Bc/GetOpenCallbackOrder',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetOpenOrdersResponse.FromString,
                )
        self.GetMatchedOrder = channel.unary_unary(
                '/bc.exchange.Bc/GetMatchedOrder',
                request_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
                response_deserializer=bc__pb2.GetMatchedOrdersResponse.FromString,
                )
        self.GetOpenOrders = channel.unary_unary(
                '/bc.exchange.Bc/GetOpenOrders',
                request_serializer=bc__pb2.GetSpendableCollateralRequest.SerializeToString,
                response_deserializer=bc__pb2.GetOpenOrdersResponse.FromString,
                )
        self.GetMatchedOrders = channel.unary_unary(
                '/bc.exchange.Bc/GetMatchedOrders',
                request_serializer=bc__pb2.GetSpendableCollateralRequest.SerializeToString,
                response_deserializer=bc__pb2.GetMatchedOrdersResponse.FromString,
                )
        self.GetHistoricalOrders = channel.unary_unary(
                '/bc.exchange.Bc/GetHistoricalOrders',
                request_serializer=bc__pb2.GetHistoryRequest.SerializeToString,
                response_deserializer=bc__pb2.GetHistoricalOrdersResponse.FromString,
                )
        self.GetUnmatchedOrders = channel.unary_unary(
                '/bc.exchange.Bc/GetUnmatchedOrders',
                request_serializer=bc__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=bc__pb2.GetOpenOrdersResponse.FromString,
                )
        self.GetUtxos = channel.unary_unary(
                '/bc.exchange.Bc/GetUtxos',
                request_serializer=bc__pb2.GetUtxosRequest.SerializeToString,
                response_deserializer=core__pb2.Utxos.FromString,
                )
        self.GetUTXOLength = channel.unary_unary(
                '/bc.exchange.Bc/GetUTXOLength',
                request_serializer=bc__pb2.GetUtxoLengthRequest.SerializeToString,
                response_deserializer=bc__pb2.GetUtxoLengthResponse.FromString,
                )
        self.GetSTXOLength = channel.unary_unary(
                '/bc.exchange.Bc/GetSTXOLength',
                request_serializer=bc__pb2.GetUtxoLengthRequest.SerializeToString,
                response_deserializer=bc__pb2.GetUtxoLengthResponse.FromString,
                )
        self.GetBlake2bl = channel.unary_unary(
                '/bc.exchange.Bc/GetBlake2bl',
                request_serializer=bc__pb2.GetBlake2blRequest.SerializeToString,
                response_deserializer=bc__pb2.GetBlake2blResponse.FromString,
                )
        self.GetBcAddressViaVanity = channel.unary_unary(
                '/bc.exchange.Bc/GetBcAddressViaVanity',
                request_serializer=bc__pb2.VanityConvertRequest.SerializeToString,
                response_deserializer=bc__pb2.VanityConvertResponse.FromString,
                )
        self.GetCurrentWork = channel.unary_unary(
                '/bc.exchange.Bc/GetCurrentWork',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.CurrentWork.FromString,
                )
        self.GetSyncStatus = channel.unary_unary(
                '/bc.exchange.Bc/GetSyncStatus',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.SyncStatus.FromString,
                )
        self.GetFastSyncStatus = channel.unary_unary(
                '/bc.exchange.Bc/GetFastSyncStatus',
                request_serializer=core__pb2.Null.SerializeToString,
                response_deserializer=bc__pb2.SyncStatus.FromString,
                )


class BcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRoveredBlockHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoveredBlockHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoveredBlocks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestRoveredBlocks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNrgSupply(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlocksHeight(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlocks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestUTXOBlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarkedTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarkedTxsForMatchedOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTradeStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOutpointStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTxClaimedBy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRawMempool(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlockByTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoveredBlockForMarkedTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Help(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stats(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTx(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmbBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpendableOutpoints(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpendableCollateral(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnlockTakerTxParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByteFeeMultiplier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransfers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTakerForMaker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOpenOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOpenCallbackOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMatchedOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOpenOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMatchedOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoricalOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnmatchedOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUtxos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUTXOLength(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSTXOLength(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlake2bl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBcAddressViaVanity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentWork(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSyncStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFastSyncStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRoveredBlockHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoveredBlockHash,
                    request_deserializer=bc__pb2.GetRoveredBlockHashRequest.FromString,
                    response_serializer=core__pb2.Block.SerializeToString,
            ),
            'GetRoveredBlockHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoveredBlockHeight,
                    request_deserializer=bc__pb2.GetRoveredBlockHeightRequest.FromString,
                    response_serializer=core__pb2.Block.SerializeToString,
            ),
            'GetRoveredBlocks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoveredBlocks,
                    request_deserializer=bc__pb2.GetRoveredBlocksRequest.FromString,
                    response_serializer=bc__pb2.GetRoveredBlocksResponse.SerializeToString,
            ),
            'GetLatestRoveredBlocks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestRoveredBlocks,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.GetRoveredBlocksResponse.SerializeToString,
            ),
            'GetNrgSupply': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNrgSupply,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.GetNrgSupplyResponse.SerializeToString,
            ),
            'GetBlockHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockHash,
                    request_deserializer=bc__pb2.GetBlockHashRequest.FromString,
                    response_serializer=core__pb2.BcBlock.SerializeToString,
            ),
            'GetBlockHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockHeight,
                    request_deserializer=bc__pb2.GetBlockHeightRequest.FromString,
                    response_serializer=core__pb2.BcBlock.SerializeToString,
            ),
            'GetBlocksHeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlocksHeight,
                    request_deserializer=bc__pb2.GetBlockHeightRequest.FromString,
                    response_serializer=bc__pb2.GetBlocksResponse.SerializeToString,
            ),
            'GetBlocks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlocks,
                    request_deserializer=bc__pb2.GetBlocksRequest.FromString,
                    response_serializer=bc__pb2.GetBlocksResponse.SerializeToString,
            ),
            'GetLatestBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestBlock,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=core__pb2.BcBlock.SerializeToString,
            ),
            'GetLatestUTXOBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestUTXOBlock,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=core__pb2.BcBlock.SerializeToString,
            ),
            'GetTx': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTx,
                    request_deserializer=bc__pb2.GetTxRequest.FromString,
                    response_serializer=core__pb2.Transaction.SerializeToString,
            ),
            'GetMarkedTx': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarkedTx,
                    request_deserializer=bc__pb2.GetMarkedTxRequest.FromString,
                    response_serializer=core__pb2.MarkedTransaction.SerializeToString,
            ),
            'GetMarkedTxsForMatchedOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarkedTxsForMatchedOrder,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetMarkedTxs.SerializeToString,
            ),
            'GetTradeStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTradeStatus,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetTradeStatusResponse.SerializeToString,
            ),
            'GetOutpointStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOutpointStatus,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetOutPointStatusResponse.SerializeToString,
            ),
            'GetTxClaimedBy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTxClaimedBy,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=core__pb2.Transaction.SerializeToString,
            ),
            'GetRawMempool': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRawMempool,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.GetRawMempoolResponse.SerializeToString,
            ),
            'GetBlockByTx': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlockByTx,
                    request_deserializer=bc__pb2.GetTxRequest.FromString,
                    response_serializer=core__pb2.BcBlock.SerializeToString,
            ),
            'GetRoveredBlockForMarkedTx': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoveredBlockForMarkedTx,
                    request_deserializer=bc__pb2.GetMarkedTxRequest.FromString,
                    response_serializer=core__pb2.Block.SerializeToString,
            ),
            'Help': grpc.unary_unary_rpc_method_handler(
                    servicer.Help,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.HelpResponse.SerializeToString,
            ),
            'Stats': grpc.unary_unary_rpc_method_handler(
                    servicer.Stats,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.StatsResponse.SerializeToString,
            ),
            'GetSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSettings,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.SettingsResponse.SerializeToString,
            ),
            'NewFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.NewFeed,
                    request_deserializer=bc__pb2.RpcFeedTransactionRequest.FromString,
                    response_serializer=bc__pb2.RpcTransactionResponse.SerializeToString,
            ),
            'UpdateFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFeed,
                    request_deserializer=bc__pb2.RpcUpdateFeedTransactionRequest.FromString,
                    response_serializer=bc__pb2.RpcTransactionResponse.SerializeToString,
            ),
            'NewTx': grpc.unary_unary_rpc_method_handler(
                    servicer.NewTx,
                    request_deserializer=bc__pb2.RpcTransaction.FromString,
                    response_serializer=bc__pb2.RpcTransactionResponse.SerializeToString,
            ),
            'SendTx': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTx,
                    request_deserializer=core__pb2.Transaction.FromString,
                    response_serializer=bc__pb2.RpcTransactionResponse.SerializeToString,
            ),
            'GetEmbBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmbBalance,
                    request_deserializer=bc__pb2.GetBalanceRequest.FromString,
                    response_serializer=bc__pb2.GetEmbBalanceResponse.SerializeToString,
            ),
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=bc__pb2.GetBalanceRequest.FromString,
                    response_serializer=bc__pb2.GetBalanceResponse.SerializeToString,
            ),
            'GetWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWallet,
                    request_deserializer=bc__pb2.GetBalanceRequest.FromString,
                    response_serializer=core__pb2.WalletData.SerializeToString,
            ),
            'GetSpendableOutpoints': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpendableOutpoints,
                    request_deserializer=bc__pb2.GetSpendableCollateralRequest.FromString,
                    response_serializer=core__pb2.WalletData.SerializeToString,
            ),
            'GetSpendableCollateral': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpendableCollateral,
                    request_deserializer=bc__pb2.GetSpendableCollateralRequest.FromString,
                    response_serializer=bc__pb2.GetSpendableCollateralResponse.SerializeToString,
            ),
            'GetUnlockTakerTxParams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnlockTakerTxParams,
                    request_deserializer=bc__pb2.GetUnlockTakerTxParamsRequest.FromString,
                    response_serializer=bc__pb2.GetUnlockTakerTxParamsResponse.SerializeToString,
            ),
            'GetByteFeeMultiplier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByteFeeMultiplier,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.GetByteFeeResponse.SerializeToString,
            ),
            'GetTransfers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransfers,
                    request_deserializer=bc__pb2.TransferRequest.FromString,
                    response_serializer=bc__pb2.TransferResponse.SerializeToString,
            ),
            'GetTakerForMaker': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTakerForMaker,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetOutPointRequest.SerializeToString,
            ),
            'GetOpenOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOpenOrder,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetOpenOrdersResponse.SerializeToString,
            ),
            'GetOpenCallbackOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOpenCallbackOrder,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetOpenOrdersResponse.SerializeToString,
            ),
            'GetMatchedOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMatchedOrder,
                    request_deserializer=bc__pb2.GetOutPointRequest.FromString,
                    response_serializer=bc__pb2.GetMatchedOrdersResponse.SerializeToString,
            ),
            'GetOpenOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOpenOrders,
                    request_deserializer=bc__pb2.GetSpendableCollateralRequest.FromString,
                    response_serializer=bc__pb2.GetOpenOrdersResponse.SerializeToString,
            ),
            'GetMatchedOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMatchedOrders,
                    request_deserializer=bc__pb2.GetSpendableCollateralRequest.FromString,
                    response_serializer=bc__pb2.GetMatchedOrdersResponse.SerializeToString,
            ),
            'GetHistoricalOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoricalOrders,
                    request_deserializer=bc__pb2.GetHistoryRequest.FromString,
                    response_serializer=bc__pb2.GetHistoricalOrdersResponse.SerializeToString,
            ),
            'GetUnmatchedOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnmatchedOrders,
                    request_deserializer=bc__pb2.GetBalanceRequest.FromString,
                    response_serializer=bc__pb2.GetOpenOrdersResponse.SerializeToString,
            ),
            'GetUtxos': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUtxos,
                    request_deserializer=bc__pb2.GetUtxosRequest.FromString,
                    response_serializer=core__pb2.Utxos.SerializeToString,
            ),
            'GetUTXOLength': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUTXOLength,
                    request_deserializer=bc__pb2.GetUtxoLengthRequest.FromString,
                    response_serializer=bc__pb2.GetUtxoLengthResponse.SerializeToString,
            ),
            'GetSTXOLength': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSTXOLength,
                    request_deserializer=bc__pb2.GetUtxoLengthRequest.FromString,
                    response_serializer=bc__pb2.GetUtxoLengthResponse.SerializeToString,
            ),
            'GetBlake2bl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlake2bl,
                    request_deserializer=bc__pb2.GetBlake2blRequest.FromString,
                    response_serializer=bc__pb2.GetBlake2blResponse.SerializeToString,
            ),
            'GetBcAddressViaVanity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBcAddressViaVanity,
                    request_deserializer=bc__pb2.VanityConvertRequest.FromString,
                    response_serializer=bc__pb2.VanityConvertResponse.SerializeToString,
            ),
            'GetCurrentWork': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentWork,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.CurrentWork.SerializeToString,
            ),
            'GetSyncStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSyncStatus,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.SyncStatus.SerializeToString,
            ),
            'GetFastSyncStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFastSyncStatus,
                    request_deserializer=core__pb2.Null.FromString,
                    response_serializer=bc__pb2.SyncStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bc.exchange.Bc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRoveredBlockHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetRoveredBlockHash',
            bc__pb2.GetRoveredBlockHashRequest.SerializeToString,
            core__pb2.Block.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoveredBlockHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetRoveredBlockHeight',
            bc__pb2.GetRoveredBlockHeightRequest.SerializeToString,
            core__pb2.Block.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoveredBlocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetRoveredBlocks',
            bc__pb2.GetRoveredBlocksRequest.SerializeToString,
            bc__pb2.GetRoveredBlocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestRoveredBlocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetLatestRoveredBlocks',
            core__pb2.Null.SerializeToString,
            bc__pb2.GetRoveredBlocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNrgSupply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetNrgSupply',
            core__pb2.Null.SerializeToString,
            bc__pb2.GetNrgSupplyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBlockHash',
            bc__pb2.GetBlockHashRequest.SerializeToString,
            core__pb2.BcBlock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBlockHeight',
            bc__pb2.GetBlockHeightRequest.SerializeToString,
            core__pb2.BcBlock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlocksHeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBlocksHeight',
            bc__pb2.GetBlockHeightRequest.SerializeToString,
            bc__pb2.GetBlocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBlocks',
            bc__pb2.GetBlocksRequest.SerializeToString,
            bc__pb2.GetBlocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetLatestBlock',
            core__pb2.Null.SerializeToString,
            core__pb2.BcBlock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestUTXOBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetLatestUTXOBlock',
            core__pb2.Null.SerializeToString,
            core__pb2.BcBlock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetTx',
            bc__pb2.GetTxRequest.SerializeToString,
            core__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarkedTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetMarkedTx',
            bc__pb2.GetMarkedTxRequest.SerializeToString,
            core__pb2.MarkedTransaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarkedTxsForMatchedOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetMarkedTxsForMatchedOrder',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetMarkedTxs.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTradeStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetTradeStatus',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetTradeStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOutpointStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetOutpointStatus',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetOutPointStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTxClaimedBy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetTxClaimedBy',
            bc__pb2.GetOutPointRequest.SerializeToString,
            core__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRawMempool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetRawMempool',
            core__pb2.Null.SerializeToString,
            bc__pb2.GetRawMempoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlockByTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBlockByTx',
            bc__pb2.GetTxRequest.SerializeToString,
            core__pb2.BcBlock.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoveredBlockForMarkedTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetRoveredBlockForMarkedTx',
            bc__pb2.GetMarkedTxRequest.SerializeToString,
            core__pb2.Block.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Help(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/Help',
            core__pb2.Null.SerializeToString,
            bc__pb2.HelpResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/Stats',
            core__pb2.Null.SerializeToString,
            bc__pb2.StatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetSettings',
            core__pb2.Null.SerializeToString,
            bc__pb2.SettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/NewFeed',
            bc__pb2.RpcFeedTransactionRequest.SerializeToString,
            bc__pb2.RpcTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/UpdateFeed',
            bc__pb2.RpcUpdateFeedTransactionRequest.SerializeToString,
            bc__pb2.RpcTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/NewTx',
            bc__pb2.RpcTransaction.SerializeToString,
            bc__pb2.RpcTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/SendTx',
            core__pb2.Transaction.SerializeToString,
            bc__pb2.RpcTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEmbBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetEmbBalance',
            bc__pb2.GetBalanceRequest.SerializeToString,
            bc__pb2.GetEmbBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBalance',
            bc__pb2.GetBalanceRequest.SerializeToString,
            bc__pb2.GetBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetWallet',
            bc__pb2.GetBalanceRequest.SerializeToString,
            core__pb2.WalletData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpendableOutpoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetSpendableOutpoints',
            bc__pb2.GetSpendableCollateralRequest.SerializeToString,
            core__pb2.WalletData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSpendableCollateral(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetSpendableCollateral',
            bc__pb2.GetSpendableCollateralRequest.SerializeToString,
            bc__pb2.GetSpendableCollateralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnlockTakerTxParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetUnlockTakerTxParams',
            bc__pb2.GetUnlockTakerTxParamsRequest.SerializeToString,
            bc__pb2.GetUnlockTakerTxParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByteFeeMultiplier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetByteFeeMultiplier',
            core__pb2.Null.SerializeToString,
            bc__pb2.GetByteFeeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransfers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetTransfers',
            bc__pb2.TransferRequest.SerializeToString,
            bc__pb2.TransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTakerForMaker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetTakerForMaker',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetOutPointRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOpenOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetOpenOrder',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetOpenOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOpenCallbackOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetOpenCallbackOrder',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetOpenOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMatchedOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetMatchedOrder',
            bc__pb2.GetOutPointRequest.SerializeToString,
            bc__pb2.GetMatchedOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOpenOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetOpenOrders',
            bc__pb2.GetSpendableCollateralRequest.SerializeToString,
            bc__pb2.GetOpenOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMatchedOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetMatchedOrders',
            bc__pb2.GetSpendableCollateralRequest.SerializeToString,
            bc__pb2.GetMatchedOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoricalOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetHistoricalOrders',
            bc__pb2.GetHistoryRequest.SerializeToString,
            bc__pb2.GetHistoricalOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnmatchedOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetUnmatchedOrders',
            bc__pb2.GetBalanceRequest.SerializeToString,
            bc__pb2.GetOpenOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUtxos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetUtxos',
            bc__pb2.GetUtxosRequest.SerializeToString,
            core__pb2.Utxos.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUTXOLength(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetUTXOLength',
            bc__pb2.GetUtxoLengthRequest.SerializeToString,
            bc__pb2.GetUtxoLengthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSTXOLength(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetSTXOLength',
            bc__pb2.GetUtxoLengthRequest.SerializeToString,
            bc__pb2.GetUtxoLengthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlake2bl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBlake2bl',
            bc__pb2.GetBlake2blRequest.SerializeToString,
            bc__pb2.GetBlake2blResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBcAddressViaVanity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetBcAddressViaVanity',
            bc__pb2.VanityConvertRequest.SerializeToString,
            bc__pb2.VanityConvertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentWork(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetCurrentWork',
            core__pb2.Null.SerializeToString,
            bc__pb2.CurrentWork.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSyncStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetSyncStatus',
            core__pb2.Null.SerializeToString,
            bc__pb2.SyncStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFastSyncStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bc.exchange.Bc/GetFastSyncStatus',
            core__pb2.Null.SerializeToString,
            bc__pb2.SyncStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
